{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "defaultValue": ""
        },
        "category": {
            "type": "string",
            "defaultValue": "Logic Apps"
        }
    },
    "variables": {
        // This is the scope to the intermediate management group you should target the deployment to.
        "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
        "policies": {
            "policyDefinitions": [
                /* Provide the property bag for each policy definition in the policyDefinitions array.
                {
                    "properties": {},
                    "name": "Policy-Definition-Name"
                }
            */]
        }
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "[variables('policies').policyDefinitions[copyIndex()].name]",
            "apiVersion": "2019-09-01",
            "copy": {
                "name": "policyDefinitionCopy",
                "count": "[length(variables('policies').policyDefinitions)]"
            },
            "properties": {
                "displayName": "[variables('policies').policyDefinitions[copyIndex()].properties.displayName]",
                "description": "[variables('policies').policyDefinitions[copyIndex()].properties.description]",
                "mode": "[variables('policies').policyDefinitions[copyIndex()].properties.mode]",
                "policyType": "Custom",
                "parameters": "[variables('policies').policyDefinitions[copyIndex()].properties.parameters]",
                "policyRule": "[variables('policies').policyDefinitions[copyIndex()].properties.policyRule]",
                "metadata": "[variables('policies').policyDefinitions[copyIndex()].properties.metadata]"
            }
        },
        {
            "type": "Microsoft.Authorization/policySetDefinitions",
            "apiVersion": "2021-06-01",
            "name": "[concat('Compliant-', parameters('category'))]",
            "dependsOn": [
                "policyDefinitionCopy"
            ],
            "properties": {
                "metadata": {
                    "version": "1.0.0",
                    "category": "[parameters('category')]"
                },
                "displayName": "[concat('Enforce secure-by-default ', parameters('category'), ' for Financial Services Industry')]",
                "description": "[concat('This policy initiative is a group of policies that ensures ', parameters('category'), 'is compliant per FSI Landing Zones')]",
                "policyDefinitionGroups": [
                    {
                        "name": "Encryption",
                        "category": "Data Protection",
                        "displayName": "[concat('Ensure ', parameters('category'), ' is using secure encryption')]",
                        "description": "[concat('Policy to ensure ', parameters('category'), ' is using secure encryption')]"
                    },
                    {
                        "name": "Network",
                        "category": "Network Security",
                        "displayName": "[concat('Ensure ', parameters('category'), ' is not accessible over the public internet')]",
                        "description": "[concat('Policy to ensure ', parameters('category'), ' is not accessible over the public internet')]"
                    },
                    {
                        "name": "Identity",
                        "category": "Identity Management",
                        "displayName": "[concat('Ensure usage of centralized identity and auhtorization system for ', parameters('category'))]",
                        "description": "[concat('Policy to ensure ', parameters('category'), ' is not using local authorization')]"
                    },
                    {
                        "name": "Logging",
                        "category": "Logging and Threat Detection",
                        "displayName": "[concat('Ensure ', parameters('category'), ' is logging all events to Log Analytics')]",
                        "description": "[concat('Policy to ensure ', parameters('category'), ' is logging all events to Log Analytics workspace')]"
                    }
                ],
                "parameters": {
                    "logicAppIseCmk": {
                        "type": "string",
                        "defaultValue": "Deny"
                    },
                    "logicAppIse": {
                        "type": "string",
                        "defaultValue": "Deny"
                    },
                    "logicAppDiagnostics": {
                        "type": "string",
                        "defaultValue": "DeployIfNotExists"
                    },
                    "logicAppLogAnalyticsWorkspaceId": {
                        "type": "string",
                        "defaultValue": ""
                    }
                },
                "policyDefinitions": [
                    /* Example reference to custom policy declared in the variables.
                    {
                        "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/', variables('policies').policyDefinitions[0].name)]",
                        "policyDefinitionReferenceId": "Deny-FooBar-Example",
                        "groupNames": [
                            "Encryption"
                        ],
                        "parameters": {
                            "effect": {
                                "value": "[[parameters('exampleParam')]"
                            }
                        }
                    },*/
                    {
                        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1fafeaf6-7927-4059-a50a-8eb2a7a6f2b5",
                        "policyDefinitionReferenceId": "Deny-Logic-App-Without-Cmk",
                        "groupNames": [
                            "Encryption"
                        ],
                        "parameters": {
                            "effect": {
                                "value": "[[parameters('logicAppIseCmk')]"
                            }
                        }
                    },
                    {
                        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/dc595cb1-1cde-45f6-8faf-f88874e1c0e1",
                        "policyDefinitionReferenceId": "Deny-Logic-App-Without-Ise",
                        "groupNames": [
                            "Network"
                        ],
                        "parameters": {
                            "effect": {
                                "value": "[[parameters('logicAppIse')]"
                            }
                        }
                    },
                    {
                        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b889a06c-ec72-4b03-910a-cb169ee18721",
                        "policyDefinitionReferenceId": "Dine-LogicApp-Diagnostics",
                        "groupNames": [
                            "Logging"
                        ],
                        "parameters": {
                            "effect": {
                                "value": "[[parameters('logicAppDiagnostics')]"
                            },
                            "logAnalytics": {
                                "value": "[[parameters('logicAppLogAnalyticsWorkspaceId')]"
                            }
                        }
                    }
                ]
            }
        }
    ]
}