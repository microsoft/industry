{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enforcementMode": {
            "type": "string",
            "allowedValues": [
                "Default",
                "DoNotEnforce"
            ],
            "defaultValue": "Default"
        },
        "listOfResourceTypesNotAllowed": {
            "type": "array",
            "defaultValue": [
                "microsoft.network/virtualnetworks/virtualnetworkpeerings",
                "microsoft.network/expressroutecircuits/peerings",
                "microsoft.network/expressroutecircuits/peerings/connections",
                "microsoft.network/expressroutecrossconnections/peerings",
                "microsoft.network/virtualrouters/peerings"
            ]            
        },
        "scope": {
            "type": "string"
        }
    },
    "variables": {
        "policyDefinitions": {
            "denySubnetWithoutNsg": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749"
         },
        "policyAssignmentNames": {
            "denySubnetWithoutNsg": "Deny-VNet-Peer-Cross-Sub",
            "description": "This policy denies the creation of vNet Peerings outside of the same subscriptions under the assigned scope.",
            "displayName": "Deny vNet peering cross subscription."
         }
    },
    "resources": [
        {   
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2019-09-01",
            "name": "[variables('policyAssignmentNames').denySubnetWithoutNsg]",
            "scope": "[parameters('scope')]",
            "properties": {
                "description": "[variables('policyAssignmentNames').description]",
                "displayName": "[variables('policyAssignmentNames').displayName]",
                "policyDefinitionId": "[variables('policyDefinitions').denySubnetWithoutNsg]",
                "enforcementMode": "[parameters('enforcementMode')]",
                "parameters": {
                    "listOfResourceTypesNotAllowed": {
                        "value": "[parameters('listOfResourceTypesNotAllowed')]"
                    }
                }
            }
        }        
    ],
    "outputs": {}
}