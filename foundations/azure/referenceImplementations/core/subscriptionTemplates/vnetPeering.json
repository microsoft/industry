{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vNetRgName": {
        "type": "string",
        "metadata": {
            "description": "Provide a name for the resource group that will contain the virtual network."
        }
      },
      "vNetName": {
        "type": "string",
        "metadata": {
            "description": "Provide a name for the virtual network."
        }
      },
      "vNetLocation": {
        "type": "string",
        "metadata": {
            "description": "Provide a location for the virtual network."
        }
      },
      "vNetCidrRange": {
        "type": "string",
        "metadata": {
            "description": "Provide a CIDR range for the virtual network."
        }        
      },
      "vNetPeerUseRemoteGateway": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
            "description": "Use remote gateway or not."
        }        
      },
      "hubResourceId": {
        "type": "string",
        "metadata": {
            "description": "Provide the resourceId for the hub."
        },
        "defaultValue": "subscriptions/fc035b2d-9f7c-4c87-b643-f156f14a4c5c/resourceGroups/Qiti-vnethub-eastus/providers/Microsoft.Network/virtualNetworks/Qiti-hub-eastus"
      },
      "azureFirewallResourceId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Provide full resourceId of Azure Firewall if used as DNS proxy"
        }
      },
      "dnsInboundResolverResourceId": {
        "type": "string",
        "defaultValue": "/subscriptions/fc035b2d-9f7c-4c87-b643-f156f14a4c5c/resourceGroups/Qiti-vnethub-eastus/providers/Microsoft.Network/dnsResolvers/Qiti-dnsresolver-eastus/inboundEndpoints/DefaultInboundEndpoint",
        "metadata": {
          "description": "Provide full resourceId of DNS inbound resolver if used as DNS"
        }
      },
      "enableDdoS": {
          "type": "string",
          "defaultValue": "No",
          "allowedValues": [
              "Yes",
              "Pip",
              "No"
          ],
          "metadata": {
              "description": "Select whether the DDoS Standard protection plan should be enabled or not."
          }
      },
      "ddosPlanResourceId": {
          "type": "string",
          "defaultValue": ""
      },
      "bgpString": {
        "type": "string",
        "defaultValue": ""
      }
    },
    "variables": {
      "udrName": "[concat(parameters('vNetName'), '-udr', parameters('vNetLocation'))]",
      "nsgName": "[concat(parameters('vNetName'), '-nsg-', parameters('vNetLocation'))]",
      "ddosProtectionPlanId": {
            "id": "[parameters('ddosPlanResourceId')]"
        },
      "bgp": {
        "virtualNetworkCommunity": "[parameters('bgpString')]"
        }
    },
    "resources": [
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6),'-rg')]",
        "location": "[parameters('vNetLocation')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "variables": {},
            "resources": [
              {
                "type": "Microsoft.Resources/resourceGroups",
                "apiVersion": "2020-06-01",
                "name": "[parameters('vNetRgName')]",
                "location": "[parameters('vNetLocation')]",
                "properties": {}
              },
              {
                "type": "Microsoft.Resources/resourceGroups",
                "apiVersion": "2020-06-01",
                "name": "NetworkWatcherRG",
                "location": "[parameters('vNetLocation')]",
                "properties": {}
              }
            ],
            "outputs": {}
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6))]",
        "resourceGroup": "[parameters('vNetRgName')]",
        "dependsOn": [
          "[concat('es-lz-vnet-',substring(uniqueString(subscription().id),0,6),'-rg')]"
        ],
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "variables": {},
            "resources": [
              {
                  "type": "Microsoft.Network/networkSecurityGroups",
                  "apiVersion": "2022-07-01",
                  "name": "[variables('nsgName')]",
                  "location": "[parameters('vNetlocation')]",
                  "properties": {
                      "securityRules": []
                  }
              },
              {
                  "type": "Microsoft.Network/routeTables",
                  "apiVersion": "2020-11-01",
                  "name": "[variables('udrName')]",
                  "location": "[parameters('vNetlocation')]",
                  "properties": {
                      "disableBgpRoutePropagation": false,
                      "routes": []
                  }
              },
              {
                "condition": "[not(empty(parameters('azureFirewallResourceId')))]",
                "type": "Microsoft.Network/virtualNetworks",
                "apiVersion": "2023-04-01",
                "name": "[parameters('vNetName')]",
                "location": "[parameters('vNetLocation')]",
                "dependsOn": [
                  "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
                  "[concat('Microsoft.Network/routeTables/', variables('udrName'))]"
                ],
                "properties": {
                  "addressSpace": {
                    "addressPrefixes": [
                      "[parameters('vNetCidrRange')]"
                    ]
                  },
                  "bgpCommunities": "[if(
                                         not(empty(parameters('bgpString'))), variables('bgp'), json('null'))]",
                  "enableDdosProtection": "[if(equals(parameters('enableDdoS'), 'Yes'), 'true', 'false')]",
                  "ddosProtectionPlan": "[if(equals(parameters('enableDdoS'), 'Yes'), variables('ddosProtectionPlanId'), json('null'))]",
                  "dhcpOptions": {
                    "dnsServers": "[if(not(empty(parameters('azureFirewallResourceId'))), array(reference(parameters('azureFirewallResourceId'), '2020-05-01').ipConfigurations[0].properties.privateIPAddress), json('[]'))]"
                    }
                }
              },
              {
                "condition": "[not(empty(parameters('dnsInboundResolverResourceId')))]",
                "type": "Microsoft.Network/virtualNetworks",
                "apiVersion": "2020-06-01",
                "name": "[parameters('vNetName')]",
                "location": "[parameters('vNetLocation')]",
                "dependsOn": [
                  "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
                  "[concat('Microsoft.Network/routeTables/', variables('udrName'))]"
                ],
                "properties": {
                  "addressSpace": {
                    "addressPrefixes": [
                      "[parameters('vNetCidrRange')]"
                    ]
                  },
                  "enableDdosProtection": "[if(equals(parameters('enableDdoS'), 'Yes'), 'true', 'false')]",
                  "ddosProtectionPlan": "[if(equals(parameters('enableDdoS'), 'Yes'), variables('ddosProtectionPlanId'), json('null'))]",
                  "dhcpOptions": {
                    "dnsServers": "[if(not(empty(parameters('dnsInboundResolverResourceId'))), reference(parameters('dnsInboundResolverResourceId'), '2022-07-01').ipConfigurations[0].privateIpAddress, json('null'))]"
                    }
                }
              },
              {
                "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                "apiVersion": "2020-05-01",
                "name": "[concat(parameters('vNetName'), '/peerToHub')]",
                "dependsOn": [
                  "[parameters('vNetName')]"
                ],
                "properties": {
                  "remoteVirtualNetwork": {
                    "id": "[parameters('hubResourceId')]"
                  },
                  "allowVirtualNetworkAccess": true,
                  "allowForwardedTraffic": true,
                  "allowGatewayTransit": true,
                  "useRemoteGateways": "[parameters('vNetPeerUseRemoteGateway')]"
                }
              },
              {
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2020-06-01",
                "name": "[concat('es-lz-hub-',substring(uniqueString(subscription().id),0,6),'-peering')]",
                "subscriptionId": "[split(parameters('hubResourceId'),'/')[2]]",
                "resourceGroup": "[split(parameters('hubResourceId'),'/')[4]]",
                "dependsOn": [
                  "[parameters('vNetName')]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "expressionEvaluationOptions": {
                    "scope": "inner"
                  },
                  "parameters": {
                    "remoteVirtualNetwork": {
                      "value": "[concat(subscription().id,'/resourceGroups/',parameters('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
                    },
                    "hubName": {
                      "value": "[split(parameters('hubResourceId'),'/')[8]]"
                    }
                  },
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                      "remoteVirtualNetwork": {
                        "type": "String",
                        "defaultValue": false
                      },
                      "hubName": {
                        "type": "String",
                        "defaultValue": false
                      }
                    },
                    "variables": {},
                    "resources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                        "name": "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]",
                        "apiVersion": "2020-05-01",
                        "properties": {
                          "allowVirtualNetworkAccess": true,
                          "allowForwardedTraffic": true,
                          "allowGatewayTransit": true,
                          "useRemoteGateways": false,
                          "remoteVirtualNetwork": {
                            "id": "[[parameters('remoteVirtualNetwork')]"
                          }
                        }
                      }
                    ],
                    "outputs": {}
                  }
                }
              }
            ],
            "outputs": {}
          }
        }
      }
    ],
    "outputs": {}
  }