{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "rgName": {
            "type": "string",
            "defaultValue": "app"
        },
        "location": {
            "type": "string",
            "defaultValue": "eastus2",
            "metadata": {
                "description": "description"
            }
        },
        "prefix": {
            "type": "string",
            "defaultValue": "compliant-kv44",
            "metadata": {
                "description": "description"
            }
        },
        "userAssignedIdentity": {
            "type": "string"
        },
        "subnetId": {
            "type": "string"
        },
        "cmkKeyName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "keyExpiration": {
            "type": "int",
            "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P30D'))]",
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P30D'))]"
            }
        },
        "expiryTime": {
            "type": "int",
            "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]",
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
            }
        },
        "timeAfterCreate": {
            "type": "int",
            "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]",
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
            }
        },
        "timeBeforeExpiry": {
            "type": "int",
            "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]",
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
            }
        }
    },
    "variables": {
        "name-compliant-keyvault": "[concat(parameters('prefix'), '-', parameters('location'), '-kv')]",
        "name-compliant-keyvault-pe": "[concat(parameters('prefix'), '-', parameters('location'), '-keyvault-pe')]",
        "name-compliant-keyvault-cmk-name": "[format('{0}/{1}', variables('name-compliant-keyvault'), parameters('cmkKeyName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[parameters('location')]",
            "name": "[parameters('rgName')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "keyvault",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults",
                            "apiVersion": "2022-11-01",
                            "name": "[variables('name-compliant-keyvault')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "sku": {
                                    "family": "A",
                                    "name": "Standard"
                                },
                                "tenantId": "[subscription().tenantId]",
                                "networkAcls": {
                                    "bypass": "AzureServices",
                                    "defaultAction": "Deny",
                                    "ipRules": [],
                                    "virtualNetworkRules": []
                                },
                                "enabledForDeployment": false,
                                "enabledForDiskEncryption": false,
                                "enabledForTemplateDeployment": false,
                                "enableSoftDelete": true,
                                "softDeleteRetentionInDays": 90,
                                "enableRbacAuthorization": true,
                                "enablePurgeProtection": true,
                                "publicNetworkAccess": "Disabled"
                            }
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid(deployment().name)]",
                            "dependsOn": [
                                "[concat('Microsoft.KeyVault/vaults/', variables('name-compliant-keyvault'))]"
                            ],
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]",
                                "principalId": "[parameters('userAssignedIdentity')]",
                                "principalType": "ServicePrincipal"
                            }
                        },
                        {
                            "type": "Microsoft.Network/privateEndpoints",
                            "apiVersion": "2020-04-01",
                            "name": "[variables('name-compliant-keyvault-pe')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[concat('Microsoft.KeyVault/vaults/', variables('name-compliant-keyvault'))]"
                            ],
                            "properties": {
                                "privateLinkServiceConnections": [
                                    {
                                        "name": "[variables('name-compliant-keyvault-pe')]",
                                        "properties": {
                                            "privateLinkServiceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.KeyVault/vaults/', variables('name-compliant-keyvault'))]",
                                            "groupIds": [
                                                "vault"
                                            ]
                                        }
                                    }
                                ],
                                "subnet": {
                                    "id": "[parameters('subnetId')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/keys",
                            "apiVersion": "2021-10-01",
                            "name": "[variables('name-compliant-keyvault-cmk-name')]",
                            "dependsOn": [
                                "[concat('Microsoft.KeyVault/vaults/', variables('name-compliant-keyvault'))]",
                                "[concat('Microsoft.Network/privateEndpoints/', variables('name-compliant-keyvault-pe'))]"
                            ],
                            "properties": {
                                "kty": "RSA",
                                "keyOps": [],
                                "keySize": 2048,
                                "curveName": "P-256",
                                "attributes": {
                                    "enabled": true,
                                    "exp": "[parameters('keyExpiration')]"
                                },
                                "rotationPolicy": {
                                    "attributes": {
                                        "expiryTime": "[parameters('expiryTime')]"
                                    },
                                    "lifetimeActions": [
                                        {
                                            "action": {
                                                "type": "notify"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
    }
}